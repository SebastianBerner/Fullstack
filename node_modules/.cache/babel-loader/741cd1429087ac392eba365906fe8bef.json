{"ast":null,"code":"import _slicedToArray from \"/home/sebastian/fullstack/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sebastian/fullstack/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = props => {\n  console.log(props);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.title));\n};\n\nconst Button = props => React.createElement(\"button\", {\n  onClick: props.handleClick,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.text);\n\nconst App = () => {\n  // save clicks of each button to own state\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stats = _useState8[0],\n        addArr = _useState8[1];\n\n  const goodClick = newValue => {\n    setGood(1 + newValue);\n  };\n\n  const badClick = newValue => {\n    setBad(newValue + 1);\n  };\n\n  const neutralClick = newValue => {\n    setNeutral(newValue + 1);\n  };\n\n  const feedback = \"give feedback\";\n  const button1 = \"good\";\n  const button2 = \"netural\";\n  const button3 = \"bad\";\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: feedback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => goodClick(good),\n    text: button1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button, {\n    handleClick: () => neutralCLick(good),\n    text: button2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/sebastian/fullstack/src/index.js"],"names":["React","useState","ReactDOM","Header","props","console","log","title","Button","handleClick","text","App","good","setGood","neutral","setNeutral","bad","setBad","stats","addArr","goodClick","newValue","badClick","neutralClick","feedback","button1","button2","button3","neutralCLick","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,KAAX,CADF,CADA;AAIA,CANF;;AAQA,MAAMC,MAAM,GAAIJ,KAAD,IACb;AAAQ,EAAA,OAAO,EAAEA,KAAK,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,KAAK,CAACM,IADT,CADF;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEQV,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETW,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcZ,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTa,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMd,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITe,GAJS;AAAA,QAIJC,MAJI;;AAAA,qBAKQhB,QAAQ,CAAC,EAAD,CALhB;AAAA;AAAA,QAKTiB,KALS;AAAA,QAKFC,MALE;;AAOhB,QAAMC,SAAS,GAAGC,QAAQ,IAAI;AAC5BR,IAAAA,OAAO,CAAC,IAAIQ,QAAL,CAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAGD,QAAQ,IAAI;AAC3BJ,IAAAA,MAAM,CAACI,QAAQ,GAAG,CAAZ,CAAN;AACD,GAFD;;AAIA,QAAME,YAAY,GAAGF,QAAQ,IAAI;AAC/BN,IAAAA,UAAU,CAACM,QAAQ,GAAG,CAAZ,CAAV;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAG,eAAjB;AACA,QAAMC,OAAO,GAAG,MAAhB;AACA,QAAMC,OAAO,GAAG,SAAhB;AACA,QAAMC,OAAO,GAAE,KAAf;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEH,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMJ,SAAS,CAACR,IAAD,CAApC;AAA4C,IAAA,IAAI,EAAEa,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAE,MAAMG,YAAY,CAAChB,IAAD,CAAvC;AAA+C,IAAA,IAAI,EAAEc,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA/BD;;AAiCAxB,QAAQ,CAAC2B,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Header = (props) => {\n  console.log(props)\n  return(\n  <div>\n    <h1>{props.title}</h1>\n  </div>\n)}\n\nconst Button = (props) => (\n  <button onClick={props.handleClick}>\n    {props.text}\n    </button>\n)\n\nconst App = () => {\n  // save clicks of each button to own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [stats, addArr] = useState([])\n\n  const goodClick = newValue => {\n    setGood(1 + newValue)\n  }\n\n  const badClick = newValue => {\n    setBad(newValue + 1)\n  }\n\n  const neutralClick = newValue => {\n    setNeutral(newValue + 1)\n  }\n\n  const feedback = \"give feedback\"\n  const button1 = \"good\"\n  const button2 = \"netural\"\n  const button3= \"bad\"\n\n  return (\n    <div>\n      <Header title={feedback}/>\n      <Button handleClick={() => goodClick(good)} text={button1} />\n      <Button handleClick={() => neutralCLick(good)} text={button2} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}